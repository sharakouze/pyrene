// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.61
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace Tmpi.Pyrene.Core.Data
{
    using Tmpi.Pyrene.Models.Entities;

    // MandatMandataire
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public class Gen_MandatMandataireConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Gen_MandatMandataire>
    {
        public Gen_MandatMandataireConfiguration()
            : this("Gen")
        {
        }

        public Gen_MandatMandataireConfiguration(string schema)
        {
            ToTable(schema + ".MandatMandataire");
            HasKey(x => x.CleMandataire);

            Property(x => x.CleMandataire).HasColumnName(@"CleMandataire").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.CleMandat).HasColumnName(@"CleMandat").IsRequired().HasColumnType("int");
            Property(x => x.ClePersonne).HasColumnName(@"ClePersonne").IsRequired().HasColumnType("int");
            Property(x => x.CleSociete).HasColumnName(@"CleSociete").IsOptional().HasColumnType("int");
            Property(x => x.CleSecteur).HasColumnName(@"CleSecteur").IsOptional().HasColumnType("int");
            Property(x => x.CleService).HasColumnName(@"CleService").IsOptional().HasColumnType("int");
            Property(x => x.EstSuspendu).HasColumnName(@"EstSuspendu").IsRequired().HasColumnType("bit");

            // Foreign keys
            HasOptional(a => a.Gen_Societe).WithMany(b => b.Gen_MandatMandataire).HasForeignKey(c => c.CleSociete).WillCascadeOnDelete(false); // FK_MandatMandataire_CleSociete
            HasOptional(a => a.Gen_SocieteSecteur).WithMany(b => b.Gen_MandatMandataire).HasForeignKey(c => c.CleSecteur).WillCascadeOnDelete(false); // FK_MandatMandataire_CleSecteur
            HasOptional(a => a.Gen_SocieteService).WithMany(b => b.Gen_MandatMandataire).HasForeignKey(c => c.CleService).WillCascadeOnDelete(false); // FK_MandatMandataire_CleService
            HasRequired(a => a.Gen_Mandat).WithMany(b => b.Gen_MandatMandataire).HasForeignKey(c => c.CleMandat); // FK_MandatMandataire_CleMandat
            HasRequired(a => a.Gen_Personne).WithMany(b => b.Gen_MandatMandataire).HasForeignKey(c => c.ClePersonne).WillCascadeOnDelete(false); // FK_MandatMandataire_ClePersonne
        }
    }

}
// </auto-generated>
