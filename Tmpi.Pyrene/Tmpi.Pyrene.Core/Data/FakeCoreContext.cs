// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.61
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace Tmpi.Pyrene.Core.Data
{
    using Tmpi.Pyrene.Models.Entities;

    using System.Linq;

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public class FakeCoreContext : ICoreContext
    {
        public System.Data.Entity.DbSet<Gen_Compteur> Gen_Compteur { get; set; }
        public System.Data.Entity.DbSet<Gen_CompteurValeur> Gen_CompteurValeur { get; set; }
        public System.Data.Entity.DbSet<Gen_Mandat> Gen_Mandat { get; set; }
        public System.Data.Entity.DbSet<Gen_MandatMandataire> Gen_MandatMandataire { get; set; }
        public System.Data.Entity.DbSet<Gen_Personne> Gen_Personne { get; set; }
        public System.Data.Entity.DbSet<Gen_PersonneProfil> Gen_PersonneProfil { get; set; }
        public System.Data.Entity.DbSet<Gen_PersonneSignature> Gen_PersonneSignature { get; set; }
        public System.Data.Entity.DbSet<Gen_Societe> Gen_Societe { get; set; }
        public System.Data.Entity.DbSet<Gen_SocieteSecteur> Gen_SocieteSecteur { get; set; }
        public System.Data.Entity.DbSet<Gen_SocieteService> Gen_SocieteService { get; set; }

        public FakeCoreContext()
        {
            Gen_Compteur = new FakeDbSet<Gen_Compteur>("CleCompteur");
            Gen_CompteurValeur = new FakeDbSet<Gen_CompteurValeur>("CleCompteur", "ValPeriode");
            Gen_Mandat = new FakeDbSet<Gen_Mandat>("CleMandat");
            Gen_MandatMandataire = new FakeDbSet<Gen_MandatMandataire>("CleMandataire");
            Gen_Personne = new FakeDbSet<Gen_Personne>("ClePersonne");
            Gen_PersonneProfil = new FakeDbSet<Gen_PersonneProfil>("CleProfil");
            Gen_PersonneSignature = new FakeDbSet<Gen_PersonneSignature>("ClePersonne");
            Gen_Societe = new FakeDbSet<Gen_Societe>("CleSociete");
            Gen_SocieteSecteur = new FakeDbSet<Gen_SocieteSecteur>("CleSecteur");
            Gen_SocieteService = new FakeDbSet<Gen_SocieteService>("CleService");
        }

        public int SaveChangesCount { get; private set; }
        public int SaveChanges()
        {
            ++SaveChangesCount;
            return 1;
        }

        public System.Threading.Tasks.Task<int> SaveChangesAsync()
        {
            ++SaveChangesCount;
            return System.Threading.Tasks.Task<int>.Factory.StartNew(() => 1);
        }

        public System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken)
        {
            ++SaveChangesCount;
            return System.Threading.Tasks.Task<int>.Factory.StartNew(() => 1, cancellationToken);
        }

        protected virtual void Dispose(bool disposing)
        {
        }

        public void Dispose()
        {
            Dispose(true);
        }
    }
}
// </auto-generated>
