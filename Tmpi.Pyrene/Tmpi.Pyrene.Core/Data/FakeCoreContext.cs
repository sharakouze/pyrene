// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.61
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace Tmpi.Pyrene.Core.Data
{
    using Tmpi.Pyrene.Core.Models.Entities;

    using System.Linq;

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public class FakeCoreContext : ICoreContext
    {
        public System.Data.Entity.DbSet<Compteur> Compteur { get; set; }
        public System.Data.Entity.DbSet<CompteurValeur> CompteurValeur { get; set; }
        public System.Data.Entity.DbSet<Mandat> Mandat { get; set; }
        public System.Data.Entity.DbSet<MandatMandataire> MandatMandataire { get; set; }
        public System.Data.Entity.DbSet<Personne> Personne { get; set; }
        public System.Data.Entity.DbSet<PersonneProfil> PersonneProfil { get; set; }
        public System.Data.Entity.DbSet<PersonneSignature> PersonneSignature { get; set; }
        public System.Data.Entity.DbSet<Societe> Societe { get; set; }
        public System.Data.Entity.DbSet<SocieteSecteur> SocieteSecteur { get; set; }
        public System.Data.Entity.DbSet<SocieteService> SocieteService { get; set; }

        public FakeCoreContext()
        {
            Compteur = new FakeDbSet<Compteur>("CleCompteur");
            CompteurValeur = new FakeDbSet<CompteurValeur>("CleCompteur", "ValPeriode");
            Mandat = new FakeDbSet<Mandat>("CleMandat");
            MandatMandataire = new FakeDbSet<MandatMandataire>("CleMandataire");
            Personne = new FakeDbSet<Personne>("ClePersonne");
            PersonneProfil = new FakeDbSet<PersonneProfil>("CleProfil");
            PersonneSignature = new FakeDbSet<PersonneSignature>("ClePersonne");
            Societe = new FakeDbSet<Societe>("CleSociete");
            SocieteSecteur = new FakeDbSet<SocieteSecteur>("CleSecteur");
            SocieteService = new FakeDbSet<SocieteService>("CleService");
        }

        public int SaveChangesCount { get; private set; }
        public int SaveChanges()
        {
            ++SaveChangesCount;
            return 1;
        }

        public System.Threading.Tasks.Task<int> SaveChangesAsync()
        {
            ++SaveChangesCount;
            return System.Threading.Tasks.Task<int>.Factory.StartNew(() => 1);
        }

        public System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken)
        {
            ++SaveChangesCount;
            return System.Threading.Tasks.Task<int>.Factory.StartNew(() => 1, cancellationToken);
        }

        protected virtual void Dispose(bool disposing)
        {
        }

        public void Dispose()
        {
            Dispose(true);
        }
    }
}
// </auto-generated>
