// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.61
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace Tmpi.Pyrene.Core.Data
{
    using Tmpi.Pyrene.Models.Entities;

    using System.Linq;

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public class CoreContext : System.Data.Entity.DbContext, ICoreContext
    {
        public System.Data.Entity.DbSet<Gen_Compteur> Gen_Compteur { get; set; } // Compteur
        public System.Data.Entity.DbSet<Gen_CompteurValeur> Gen_CompteurValeur { get; set; } // CompteurValeur
        public System.Data.Entity.DbSet<Gen_Mandat> Gen_Mandat { get; set; } // Mandat
        public System.Data.Entity.DbSet<Gen_MandatMandataire> Gen_MandatMandataire { get; set; } // MandatMandataire
        public System.Data.Entity.DbSet<Gen_Personne> Gen_Personne { get; set; } // Personne
        public System.Data.Entity.DbSet<Gen_PersonneProfil> Gen_PersonneProfil { get; set; } // PersonneProfil
        public System.Data.Entity.DbSet<Gen_PersonneSignature> Gen_PersonneSignature { get; set; } // PersonneSignature
        public System.Data.Entity.DbSet<Gen_Societe> Gen_Societe { get; set; } // Societe
        public System.Data.Entity.DbSet<Gen_SocieteSecteur> Gen_SocieteSecteur { get; set; } // SocieteSecteur
        public System.Data.Entity.DbSet<Gen_SocieteService> Gen_SocieteService { get; set; } // SocieteService

        static CoreContext()
        {
            System.Data.Entity.Database.SetInitializer<CoreContext>(null);
        }

        public CoreContext()
            : base("Name=CoreModel")
        {
        }

        public CoreContext(string connectionString)
            : base(connectionString)
        {
        }

        public CoreContext(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model)
            : base(connectionString, model)
        {
        }

        public CoreContext(System.Data.Common.DbConnection existingConnection, bool contextOwnsConnection)
            : base(existingConnection, contextOwnsConnection)
        {
        }

        public CoreContext(System.Data.Common.DbConnection existingConnection, System.Data.Entity.Infrastructure.DbCompiledModel model, bool contextOwnsConnection)
            : base(existingConnection, model, contextOwnsConnection)
        {
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
        }

        public bool IsSqlParameterNull(System.Data.SqlClient.SqlParameter param)
        {
            var sqlValue = param.SqlValue;
            var nullableValue = sqlValue as System.Data.SqlTypes.INullable;
            if (nullableValue != null)
                return nullableValue.IsNull;
            return (sqlValue == null || sqlValue == System.DBNull.Value);
        }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new Gen_CompteurConfiguration());
            modelBuilder.Configurations.Add(new Gen_CompteurValeurConfiguration());
            modelBuilder.Configurations.Add(new Gen_MandatConfiguration());
            modelBuilder.Configurations.Add(new Gen_MandatMandataireConfiguration());
            modelBuilder.Configurations.Add(new Gen_PersonneConfiguration());
            modelBuilder.Configurations.Add(new Gen_PersonneProfilConfiguration());
            modelBuilder.Configurations.Add(new Gen_PersonneSignatureConfiguration());
            modelBuilder.Configurations.Add(new Gen_SocieteConfiguration());
            modelBuilder.Configurations.Add(new Gen_SocieteSecteurConfiguration());
            modelBuilder.Configurations.Add(new Gen_SocieteServiceConfiguration());
        }

        public static System.Data.Entity.DbModelBuilder CreateModel(System.Data.Entity.DbModelBuilder modelBuilder, string schema)
        {
            modelBuilder.Configurations.Add(new Gen_CompteurConfiguration(schema));
            modelBuilder.Configurations.Add(new Gen_CompteurValeurConfiguration(schema));
            modelBuilder.Configurations.Add(new Gen_MandatConfiguration(schema));
            modelBuilder.Configurations.Add(new Gen_MandatMandataireConfiguration(schema));
            modelBuilder.Configurations.Add(new Gen_PersonneConfiguration(schema));
            modelBuilder.Configurations.Add(new Gen_PersonneProfilConfiguration(schema));
            modelBuilder.Configurations.Add(new Gen_PersonneSignatureConfiguration(schema));
            modelBuilder.Configurations.Add(new Gen_SocieteConfiguration(schema));
            modelBuilder.Configurations.Add(new Gen_SocieteSecteurConfiguration(schema));
            modelBuilder.Configurations.Add(new Gen_SocieteServiceConfiguration(schema));
            return modelBuilder;
        }
    }
}
// </auto-generated>
