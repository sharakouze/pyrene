// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.61
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace Tmpi.Pyrene.Core.Data
{
    using Tmpi.Pyrene.Core.Models.Entities;

    using System.Linq;

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public class CoreContext : System.Data.Entity.DbContext, ICoreContext
    {
        public System.Data.Entity.DbSet<Compteur> Compteur { get; set; } // Compteur
        public System.Data.Entity.DbSet<CompteurValeur> CompteurValeur { get; set; } // CompteurValeur
        public System.Data.Entity.DbSet<Mandat> Mandat { get; set; } // Mandat
        public System.Data.Entity.DbSet<MandatMandataire> MandatMandataire { get; set; } // MandatMandataire
        public System.Data.Entity.DbSet<Personne> Personne { get; set; } // Personne
        public System.Data.Entity.DbSet<PersonneProfil> PersonneProfil { get; set; } // PersonneProfil
        public System.Data.Entity.DbSet<PersonneSignature> PersonneSignature { get; set; } // PersonneSignature
        public System.Data.Entity.DbSet<Societe> Societe { get; set; } // Societe
        public System.Data.Entity.DbSet<SocieteSecteur> SocieteSecteur { get; set; } // SocieteSecteur
        public System.Data.Entity.DbSet<SocieteService> SocieteService { get; set; } // SocieteService

        static CoreContext()
        {
            System.Data.Entity.Database.SetInitializer<CoreContext>(null);
        }

        public CoreContext()
            : base("Name=CoreModel")
        {
        }

        public CoreContext(string connectionString)
            : base(connectionString)
        {
        }

        public CoreContext(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model)
            : base(connectionString, model)
        {
        }

        public CoreContext(System.Data.Common.DbConnection existingConnection, bool contextOwnsConnection)
            : base(existingConnection, contextOwnsConnection)
        {
        }

        public CoreContext(System.Data.Common.DbConnection existingConnection, System.Data.Entity.Infrastructure.DbCompiledModel model, bool contextOwnsConnection)
            : base(existingConnection, model, contextOwnsConnection)
        {
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
        }

        public bool IsSqlParameterNull(System.Data.SqlClient.SqlParameter param)
        {
            var sqlValue = param.SqlValue;
            var nullableValue = sqlValue as System.Data.SqlTypes.INullable;
            if (nullableValue != null)
                return nullableValue.IsNull;
            return (sqlValue == null || sqlValue == System.DBNull.Value);
        }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new CompteurConfiguration());
            modelBuilder.Configurations.Add(new CompteurValeurConfiguration());
            modelBuilder.Configurations.Add(new MandatConfiguration());
            modelBuilder.Configurations.Add(new MandatMandataireConfiguration());
            modelBuilder.Configurations.Add(new PersonneConfiguration());
            modelBuilder.Configurations.Add(new PersonneProfilConfiguration());
            modelBuilder.Configurations.Add(new PersonneSignatureConfiguration());
            modelBuilder.Configurations.Add(new SocieteConfiguration());
            modelBuilder.Configurations.Add(new SocieteSecteurConfiguration());
            modelBuilder.Configurations.Add(new SocieteServiceConfiguration());
        }

        public static System.Data.Entity.DbModelBuilder CreateModel(System.Data.Entity.DbModelBuilder modelBuilder, string schema)
        {
            modelBuilder.Configurations.Add(new CompteurConfiguration(schema));
            modelBuilder.Configurations.Add(new CompteurValeurConfiguration(schema));
            modelBuilder.Configurations.Add(new MandatConfiguration(schema));
            modelBuilder.Configurations.Add(new MandatMandataireConfiguration(schema));
            modelBuilder.Configurations.Add(new PersonneConfiguration(schema));
            modelBuilder.Configurations.Add(new PersonneProfilConfiguration(schema));
            modelBuilder.Configurations.Add(new PersonneSignatureConfiguration(schema));
            modelBuilder.Configurations.Add(new SocieteConfiguration(schema));
            modelBuilder.Configurations.Add(new SocieteSecteurConfiguration(schema));
            modelBuilder.Configurations.Add(new SocieteServiceConfiguration(schema));
            return modelBuilder;
        }
    }
}
// </auto-generated>
