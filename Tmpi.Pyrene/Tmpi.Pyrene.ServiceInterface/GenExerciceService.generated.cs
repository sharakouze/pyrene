//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Diagnostics;
using ServiceStack;
using ServiceStack.OrmLite;
using Tmpi.Pyrene.ServiceModel;
using Tmpi.Pyrene.ServiceModel.Types;

namespace Tmpi.Pyrene.ServiceInterface
{
	public partial class GenExerciceService : Service
	{
        /// <summary>
        /// 
        /// </summary>
        /// <param name="request"></param>
        /// <returns></returns>
		public List<string> Get(AutocompleteGenExercice request)
		{
            if (string.IsNullOrWhiteSpace(request.Text))
            {
                return null;
            }

            var q1 = Db.From<GenCompteur>().Select(c => c.CodObjet).Where(c => c.CodObjet.Contains(request.Text));
            var q2 = Db.From<GenCompteur>().Select(c => c.LibObjet).Where(c => c.LibObjet.Contains(request.Text));

			return null;
		}

        /// <summary>
        /// 
        /// </summary>
        /// <param name="request"></param>
		public void Delete(DeleteGenExercice request)
		{
			int count = Db.DeleteById<GenExercice>(request.Id);
			if (count == 0)
			{
				throw HttpError.NotFound(
					string.Format(ErrorMessages.EntityByIdNotFound, nameof(GenExercice), request.Id));
			}
		}

        /// <summary>
        /// 
        /// </summary>
        /// <param name="request"></param>
        /// <returns></returns>
		public GenExercice Post(GenExercice request)
		{
            var id = Db.Insert(request, selectIdentity: true);
            request.Id = (int)id;

            return request;
		}

        /// <summary>
        /// 
        /// </summary>
        /// <param name="request"></param>
		public void Put(GenExercice request)
		{
		}

        /// <summary>
        /// 
        /// </summary>
        /// <param name="request"></param>
        /// <returns></returns>
		public GenExercice Get(GetGenExercice request)
		{
            var entity = Db.SingleById<GenExercice>(request.Id);
			if (entity == null)
			{
				throw HttpError.NotFound(
					string.Format(ErrorMessages.EntityByIdNotFound, nameof(GenExercice), request.Id));
			}
			return entity;
		}

        /// <summary>
        /// 
        /// </summary>
        /// <param name="request"></param>
		public void Patch(PatchGenExercice request)
		{
		}

	}
}
