//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using ServiceStack;
using ServiceStack.OrmLite;
using Tmpi.Pyrene.Services.ServiceModel;
using Tmpi.Pyrene.Services.ServiceModel.Types;
using Tmpi.Pyrene.Infrastructure;

namespace Tmpi.Pyrene.Services.ServiceInterface
{
	/// <summary>
	/// Service qui traite les requêtes sur les ressources <see cref="GenFourn" />.
	/// </summary>
	public partial class GenFournService : Service
	{
		/// <summary>
		/// Supprime la ressource <see cref="GenFourn" /> spécifiée dans la requête.
		/// </summary>
		/// <param name="request">Requête à traiter.</param>
		/// <exception cref="HttpError">La ressource spécifiée est introuvable.</exception>
		public void Delete(DeleteGenFourn request)
		{
			int count = Db.DeleteById<GenFourn>(request.CleFourn);
			if (count == 0)
			{
				throw HttpError.NotFound(
					string.Format(ServicesErrorMessages.ResourceByIdNotFound, nameof(GenFourn), request.CleFourn));
			}
		}

		/// <summary>
		/// Supprime la ressource <see cref="GenFournBanque" /> spécifiée dans la requête.
		/// </summary>
		/// <param name="request">Requête à traiter.</param>
		/// <exception cref="HttpError">La ressource spécifiée est introuvable.</exception>
		public void Delete(DeleteGenFournBanque request)
		{
			int count = Db.DeleteById<GenFournBanque>(request.CleBanque);
			if (count == 0)
			{
				throw HttpError.NotFound(
					string.Format(ServicesErrorMessages.ResourceByIdNotFound, nameof(GenFournBanque), request.CleBanque));
			}
		}

		/// <summary>
		/// Supprime la ressource <see cref="GenFournContact" /> spécifiée dans la requête.
		/// </summary>
		/// <param name="request">Requête à traiter.</param>
		/// <exception cref="HttpError">La ressource spécifiée est introuvable.</exception>
		public void Delete(DeleteGenFournContact request)
		{
			int count = Db.DeleteById<GenFournContact>(request.CleContact);
			if (count == 0)
			{
				throw HttpError.NotFound(
					string.Format(ServicesErrorMessages.ResourceByIdNotFound, nameof(GenFournContact), request.CleContact));
			}
		}

        public void Put(GenFourn r)
        {
        }

        public void Put(GenFournBanque r)
        {
        }

        public void Post(GenFournBanque r)
        {
        }

        public GenFourn Get(GetGenFourn r)
        {
            return null;
        }
    }
}
